<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.6.0.v201603302314</property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <data-sources>
        <data-mart-data-source name="Data Source" id="43">
            <property name="datamartURL">Data Objects/VCE Data Object</property>
            <property name="accessType">latest</property>
        </data-mart-data-source>
    </data-sources>
    <property name="linkedDataModels">
        <data-mart-linked-data-model name="VCE Data Model" id="52">
            <property name="dataSource">Data Source</property>
            <property name="dataObject">VCE Data Model</property>
        </data-mart-linked-data-model>
    </property>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">custom</property>
            <property name="orientation">landscape</property>
            <property name="height">8.5in</property>
            <property name="width">18in</property>
            <property name="headerHeight">0.1in</property>
            <property name="footerHeight">0.1in</property>
        </simple-master-page>
    </page-setup>
    <body>
        <grid id="46">
            <property name="fontFamily">"Arial"</property>
            <property name="height">7.833333333333333in</property>
            <column id="47"/>
            <column id="48"/>
            <row id="49">
                <property name="height">7.833333333333333in</property>
                <cell id="50">
                    <extended-item extensionName="HTMLControl" name="myCustomViz" id="45">
                        <method name="clientOnCreate"><![CDATA[var config = {
	googleMapKey : "",
	latitudeColumn : "Center_Lat",
	longitudeColumn : "Center_Lon",
	markerLabelColumn : "Block ID",
	locationNameColumn : "Location Name",
	WestBL : "WestBL",
	EastBL : "EastBL",
	NorthBL : "NorthBL",
	SouthBL : "SouthBL",
	mapCenter : {
		/* the latitude for the center */
		lat : 37.4771468,
		/* the longitude for the center */
		lng : -120.5575031
	}
};

var googleMapScriptUrl = "https://maps.googleapis.com/maps/api/js?key="
		+ config.googleMapKey + "&amp;sensor=false&amp;callback=initialize";

var id = this.getId();
var map = null;
var lastInfowindow = null;
var customViz = this;
customViz.setPrintTimeOut(5000);
var data = this.getData();

//config.testMode = !data || !data.columns || data.columns.length == 0;
config.testMode = false;

function getMarkerData() {

	if (config.testMode) {

		// use sample data
		return [ [ 37.4809505, -120.5350595, '311', 'Cowell 311' ],
				[ 37.47492055, -120.5531685, '334', 'Cowell 334' ],
				[ 37.4677394, -120.5599093, '360', 'Cowell 360' ],
				[ 37.4664451, -120.5709171, '361', 'Cowell 361' ] ];
	} else {

		// use data bindings, make sure the column names in config is properly
		// set
		var data = customViz.getData();

		if (!data || !data.rows || !data.columns) {
			return [];
		}

		// gets the index for columns
		var i1 = -1, i2 = -1, i3 = -1, i4 = -1, i5 = -1, i6 = -1, i7 = -1, i8 = -1;
		for (var i = 0; i < data.columns.length; i++) {
			if (data.columns[i] == config.latitudeColumn) {
				i1 = i;
			} else if (data.columns[i] == config.longitudeColumn) {
				i2 = i;
			} else if (data.columns[i] == config.markerLabelColumn) {
				i3 = i;
			} else if (data.columns[i] == config.locationNameColumn) {
				i4 = i;
			} else if (data.columns[i] == config.WestBL) {
				i5 = i;
			} else if (data.columns[i] == config.EastBL) {
				i6 = i;
			} else if (data.columns[i] == config.NorthBL) {
				i7 = i;
			} else if (data.columns[i] == config.SouthBL) {
				i8 = i;
			}
		}

		if (i1 < 0 || i2 < 0 || i3 < 0 || i4 < 0 || i5 < 0 || i6 < 0 || i7 < 0 || i8 < 0) {
			return [];
		}

		// populate marker data by column index
		var markerData = [];
		for (var i = 0; i < data.rows.length; i++) {
			var row = data.rows[i];
			markerData.push([ row[i1], row[i2], row[i3], row[i4], row[i5], row[i6], row[i7], row[i8] ]);
		}

		return markerData;
	}
}

// load map jsapi
function loadMap(scriptUrl) {

	if (window.mapApiLoaded) {
		return;
	}

	// mark the flag to prevent duplicate loading
	window.mapApiLoaded = true;

	// make sure we only load the jsapi once
	var script = document.createElement('script');
	script.type = 'text/javascript';
	script.src = scriptUrl;
	document.body.appendChild(script);
}

// create the map
function createMap() {
	var mapOptions = {
		zoom : 14,
		center : new google.maps.LatLng(config.mapCenter.lat, config.mapCenter.lng),
		scrollwheel : false,
		mapTypeId : google.maps.MapTypeId.TERRAIN,
		navigationControlOptions : {
			style : google.maps.NavigationControlStyle.SMALL,
			position : google.maps.ControlPosition.TOP_RIGHT
		}
	};
	map = new google.maps.Map(document.getElementById(id), mapOptions);
	createMarker();
	
	
	// Brushing using the SHIFT key to select -- cwong 01/06/2017
	//	
    // Start drag rectangle to select markers
    var shiftPressed = false;

    $(window).keydown(function (evt) {
        if (evt.which === 16) { // shift
            shiftPressed = true;
            console.log("key down");
        }
    }).keyup(function (evt) {
        if (evt.which === 16) { // shift
            shiftPressed = false;
            console.log("key up ");
        }
    });
    
	var mouseDownPos, gribBoundingBox = null, mouseIsDown = 0;
   	var themap = map;

    google.maps.event.addListener(themap, 'mousemove', function (e) {
       //console.log("move md,sh", mouseIsDown,shiftPressed);        
        if (mouseIsDown &amp;&amp; (shiftPressed|| gribBoundingBox != null) ) {
            if (gribBoundingBox !== null) // box exists
            {         
                var newbounds = new google.maps.LatLngBounds(mouseDownPos,null);
                newbounds.extend(e.latLng);    
                gribBoundingBox.setBounds(newbounds); // If this statement is enabled, I lose mouseUp events

            } else // create bounding box
            {
                //console.log("first move");
                gribBoundingBox = new google.maps.Rectangle({
                    map: themap,
                    bounds: null,
                    fillOpacity: 0.15,
                    strokeWeight: 0.9,
                    clickable: false
                });
            }
        }
    });

    google.maps.event.addListener(themap, 'mousedown', function (e) {
        if (shiftPressed) {
            mouseIsDown = 1;
            mouseDownPos = e.latLng;
            themap.setOptions({
                draggable: false
            });
        }
    });

    google.maps.event.addListener(themap, 'mouseup', function (e) {
        if (mouseIsDown &amp;&amp; (shiftPressed|| gribBoundingBox != null)) {
            mouseIsDown = 0;

            if (gribBoundingBox !== null) // box exists
            {
				// Reset the JSAPI filter list
				var myFilterList = [];
				
                var boundsSelectionArea = new google.maps.LatLngBounds(gribBoundingBox.getBounds().getSouthWest(), gribBoundingBox.getBounds().getNorthEast());
                
                //debugger;
                
                for (var key in markers) { // looping throughMarkers Collection	

//                    if (boundsSelectionArea.contains(markers[key].marker.getPosition())) 
                    if (gribBoundingBox.getBounds().contains(markers[key].marker.getPosition())) 
                    {
						markers[key].selected = true;
						myFilterList.push(markers[key].id);
						
    					var image = 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2238%22%20height%3D%2238%22%20viewBox%3D%220%200%2038%2038%22%3E%3Cpath%20fill%3D%22%236698d4%22%20stroke%3D%22%236698d4%22%20stroke-width%3D%22.5%22%20d%3D%22M34.305%2016.234c0%208.83-15.148%2019.158-15.148%2019.158S3.507%2025.065%203.507%2016.1c0-8.505%206.894-14.304%2015.4-14.304%208.504%200%2015.398%205.933%2015.398%2014.438z%22%2F%3E%3Ctext%20transform%3D%22translate%2819%2018.5%29%22%20fill%3D%22%23fff%22%20style%3D%22font-family%3A%20Arial%2C%20sans-serif%3Bfont-weight%3Abold%3Btext-align%3Acenter%3B%22%20font-size%3D%2212%22%20text-anchor%3D%22middle%22%3E' + markers[key].id + '%3C%2Ftext%3E%3C%2Fsvg%3E';
						
                        //markers[key].marker.setIcon("http://maps.google.com/mapfiles/ms/icons/blue.png");
                        markers[key].marker.setIcon(image);
						
						//document.getElementById('info').innerHTML += "key:"+key+" posn:"+markers[key].marker.getPosition()+" in bnds:"+gribBoundingBox.getBounds()+"<br>";
                         console.log("User selected:" + key + ", id:" + markers[key].id);
                         
                    } else {
					
						markers[key].selected = false;
						
    					var image = 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2238%22%20height%3D%2238%22%20viewBox%3D%220%200%2038%2038%22%3E%3Cpath%20fill%3D%22%23808080%22%20stroke%3D%22%23ccc%22%20stroke-width%3D%22.5%22%20d%3D%22M34.305%2016.234c0%208.83-15.148%2019.158-15.148%2019.158S3.507%2025.065%203.507%2016.1c0-8.505%206.894-14.304%2015.4-14.304%208.504%200%2015.398%205.933%2015.398%2014.438z%22%2F%3E%3Ctext%20transform%3D%22translate%2819%2018.5%29%22%20fill%3D%22%23fff%22%20style%3D%22font-family%3A%20Arial%2C%20sans-serif%3Bfont-weight%3Abold%3Btext-align%3Acenter%3B%22%20font-size%3D%2212%22%20text-anchor%3D%22middle%22%3E' + markers[key].id + '%3C%2Ftext%3E%3C%2Fsvg%3E';
						
						//markers[key].marker.setIcon("http://maps.google.com/mapfiles/ms/icons/red.png");
                    	markers[key].marker.setIcon(image);
                        
						//document.getElementById('info').innerHTML += "key:"+key+" posn:"+markers[key].marker.getPosition()+" out of bnds:"+gribBoundingBox.getBounds()+"<br>";
                        console.log("User NOT selected:" + key + ", id:" + markers[key].id);
                    }
                }

                gribBoundingBox.setMap(null); // remove the rectangle
                
                // ToDo:  Filtering application here
                //
                // Build the filtering list
				//
                debugger;
                
                var viewer = actuate.getViewer('propertyTable');
				var table = viewer.getTable('propertyTable');
				table.setFilters(new actuate.data.Filter("Block ID", actuate.data.Filter.IN, myFilterList));
				table.submit();
				
				
				
 
            }
            gribBoundingBox = null;

        }

        themap.setOptions({
            draggable: true
        });
        //stopDraw(e);
    });    


	
	
	customViz.setDelegate(map);
	// CreateMarker() calls google api that has untrackable async js call itself. 
	// It is not safe to call setPrintReady() here rather we need a timer to control it.
	window.setTimeout(function(){customViz.setPrintReady()} , 3000);
}

var markers = {};

// create markers
function createMarker() {
	var data = getMarkerData();

	if (!data || data.length == 0) {
		return;
	}

	// Reset zoom and center of map -- cwong 01/06/2017
	//
	var bounds = new google.maps.LatLngBounds();

	for (var i = 0; i < data.length; i++) {
	
		var image = 'data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2238%22%20height%3D%2238%22%20viewBox%3D%220%200%2038%2038%22%3E%3Cpath%20fill%3D%22%23808080%22%20stroke%3D%22%23ccc%22%20stroke-width%3D%22.5%22%20d%3D%22M34.305%2016.234c0%208.83-15.148%2019.158-15.148%2019.158S3.507%2025.065%203.507%2016.1c0-8.505%206.894-14.304%2015.4-14.304%208.504%200%2015.398%205.933%2015.398%2014.438z%22%2F%3E%3Ctext%20transform%3D%22translate%2819%2018.5%29%22%20fill%3D%22%23fff%22%20style%3D%22font-family%3A%20Arial%2C%20sans-serif%3Bfont-weight%3Abold%3Btext-align%3Acenter%3B%22%20font-size%3D%2212%22%20text-anchor%3D%22middle%22%3E' + data[i][2] + '%3C%2Ftext%3E%3C%2Fsvg%3E';
	
		var marker = new google.maps.Marker({
			map : map,
			position : new google.maps.LatLng(data[i][0], data[i][1]),
			icon: image
			
		});


		// Populate markers {} for brushing selection -- cwong 01/06/2017
		//
		//		http://fiddle.jshell.net/7ZxMA/33/
		//
		var name = data[i][3];
		markers[name] = {};
		markers[name].id =  data[i][2];
		markers[name].lat = data[i][0];
		markers[name].lng = data[i][1];
		markers[name].state = 'Online';
		markers[name].position = new google.maps.LatLng(data[i][0], data[i][1]);
		markers[name].selected = false;
		markers[name].marker = marker;
		
		// Add a KML Layer (for Cowell properties) -- cwong 01/06/2017
		//
		// KML EC_Deep Layer for Cowell 311: http://pastebin.com/raw/hmKamALj
		//
		//		ToDo: Toggle @ http://stackoverflow.com/questions/17409598/toggle-multiple-kml-kml-layers-in-google-maps-api-v3
		//					 @ http://stackoverflow.com/questions/9855067/toggle-kml-layers-in-google-maps-v3
		//
		//function toggleLayer( layer, map ){
 		//    layer.setMap( layer.getMap() ? null : map );
		//}
		
		if (data[i][3] == 'Cowell 311') {
			src = 'http://pastebin.com/raw/3MNkZF4a';
			}
		else if (data[i][3] == 'Cowell 334') {
			src = 'http://pastebin.com/raw/UddJcn35';
			}
		else if (data[i][3] == 'Cowell 360') {
			src = 'http://pastebin.com/raw/YCJ12Hiz';
			}
		else if (data[i][3] == 'Cowell 361') {
			src = 'http://pastebin.com/raw/7qGNUYyW';
			}
			
		if (data[i][3].indexOf('Cowell') >= 0) {
			var kmlLayer = new google.maps.KmlLayer(src, {
				suppressInfoWindows: true,
				preserveViewport: true,
				map: map
			});
		}
		else {
		// Add a simple polygon (for non-Cowell properties) -- cwong 01/06/2017
		//
			var propertyCoords = [];
			propertyCoords.push ( new google.maps.LatLng (data[i][6], data[i][4]) );
			propertyCoords.push ( new google.maps.LatLng (data[i][6], data[i][5]) );
			propertyCoords.push ( new google.maps.LatLng (data[i][7], data[i][5]) );
			propertyCoords.push ( new google.maps.LatLng (data[i][7], data[i][4]) );
			
			var randomColor = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);
						
        	var propertyPoly = new google.maps.Polygon({
        	  paths: propertyCoords,
        	  strokeColor: randomColor,
        	  strokeOpacity: 0.6,
        	  strokeWeight: 1,
        	  fillColor: randomColor,
        	  fillOpacity: 0.3
        	});
        	
			propertyPoly.setMap(map);
		}

		// Reset zoom and center of map -- cwong 01/06/2017
		//		
		if (data[i][0] &amp;&amp; data[i][1]) {
			bounds.extend(new google.maps.LatLng (data[i][0], data[i][1]));
		}
		
		//createMarkerInfoWindow(marker, data[i][2]);
		createMarkerInfoWindow(marker, data[i][3]);
	}

	// Reset zoom and center of map -- cwong 01/06/2017
	//		
	map.fitBounds(bounds);
}

// create the popup info window for each marker
function createMarkerInfoWindow(marker, info) {
	var contentString = '<div><b>' + info + '</b></div>'
	var infowindow = new google.maps.InfoWindow({
		content : contentString
	});

	google.maps.event.addListener(marker, 'click', function() {
		if (lastInfowindow != null) {
			lastInfowindow.close();
		}
		infowindow.open(map, marker);
		lastInfowindow = infowindow;
	});
}

// check whether Google Map jsapi already loaded, duplicate loading may cause
// issues.
if (window.mapApiLoaded) {
	// directly create the map
	createMap();
} else {

	// due to the restriction of Google Map JSAPI, you must use a global
	// callback function, here we use "initialize". change the name if there's
	// any conflict
	window.initialize = function() {
		createMap();
	};

	// load jsapi and use callback to create the map
	loadMap(googleMapScriptUrl);
}
]]></method>
                        <property name="height">6.729166666666667in</property>
                        <property name="width">100%</property>
                        <property name="dataBindingRef">PropertyTable</property>
                        <property name="displayName">Google Map</property>
                    </extended-item>
                </cell>
                <cell id="51">
                    <table name="PropertyTable" id="1033">
                        <property name="fontSize">9pt</property>
                        <property name="marginLeft">30px</property>
                        <property name="width">8in</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">PBLK_N1</property>
                                <text-property name="displayName">PBLK_N</text-property>
                                <expression name="expression" type="javascript">dataSetRow["PBLK_N1"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">Block ID</property>
                                <text-property name="displayName">Block ID</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Block ID"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">Location Name</property>
                                <text-property name="displayName">Location Name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Location Name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">WestBL</property>
                                <text-property name="displayName">WestBL</text-property>
                                <expression name="expression" type="javascript">dataSetRow["WestBL"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">EastBL</property>
                                <text-property name="displayName">EastBL</text-property>
                                <expression name="expression" type="javascript">dataSetRow["EastBL"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">NorthBL</property>
                                <text-property name="displayName">NorthBL</text-property>
                                <expression name="expression" type="javascript">dataSetRow["NorthBL"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">SouthBL</property>
                                <text-property name="displayName">SouthBL</text-property>
                                <expression name="expression" type="javascript">dataSetRow["SouthBL"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">City</property>
                                <text-property name="displayName">City</text-property>
                                <expression name="expression" type="javascript">dataSetRow["City"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">State</property>
                                <text-property name="displayName">State</text-property>
                                <expression name="expression" type="javascript">dataSetRow["State"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">Center_Lat</property>
                                <text-property name="displayName">Center_Lat</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Center_Lat"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">Center_Lon</property>
                                <text-property name="displayName">Center_Lon</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Center_Lon"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                        </list-property>
                        <expression name="bookmark" type="javascript">'propertyTable'</expression>
                        <property name="linkedDataModel">VCE Data Model</property>
                        <column id="1092">
                            <property name="width">0.4in</property>
                        </column>
                        <column id="1093">
                            <property name="width">0.35in</property>
                        </column>
                        <column id="1094">
                            <property name="width">1.1in</property>
                        </column>
                        <column id="1099">
                            <property name="width">0.78125in</property>
                        </column>
                        <column id="1100">
                            <property name="width">0.45in</property>
                        </column>
                        <column id="1101">
                            <property name="width">0.65in</property>
                        </column>
                        <column id="1102">
                            <property name="width">0.65in</property>
                        </column>
                        <header>
                            <row id="1034">
                                <property name="borderBottomColor">#808080</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">2px</property>
                                <cell id="1035">
                                    <label id="1036">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">PBLK_N</text-property>
                                    </label>
                                </cell>
                                <cell id="1037">
                                    <label id="1038">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">Block ID</text-property>
                                    </label>
                                </cell>
                                <cell id="1039">
                                    <label id="1040">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">Location</text-property>
                                    </label>
                                </cell>
                                <cell id="1049">
                                    <label id="1050">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">City</text-property>
                                    </label>
                                </cell>
                                <cell id="1051">
                                    <label id="1052">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">State</text-property>
                                    </label>
                                </cell>
                                <cell id="1053">
                                    <label id="1054">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">Center_Lat</text-property>
                                    </label>
                                </cell>
                                <cell id="1055">
                                    <label id="1056">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingLeft">2pt</property>
                                        <property name="textAlign">left</property>
                                        <text-property name="text">Center_Lon</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="1057">
                                <cell id="1058">
                                    <data id="1059">
                                        <property name="paddingLeft">2pt</property>
                                        <property name="resultSetColumn">PBLK_N1</property>
                                    </data>
                                </cell>
                                <cell id="1060">
                                    <data id="1061">
                                        <property name="paddingLeft">2pt</property>
                                        <property name="resultSetColumn">Block ID</property>
                                    </data>
                                </cell>
                                <cell id="1062">
                                    <data id="1063">
                                        <property name="paddingLeft">2pt</property>
                                        <property name="resultSetColumn">Location Name</property>
                                    </data>
                                </cell>
                                <cell id="1072">
                                    <data id="1073">
                                        <property name="paddingLeft">2pt</property>
                                        <property name="resultSetColumn">City</property>
                                    </data>
                                </cell>
                                <cell id="1074">
                                    <data id="1075">
                                        <property name="paddingLeft">2pt</property>
                                        <property name="resultSetColumn">State</property>
                                    </data>
                                </cell>
                                <cell id="1076">
                                    <data id="1077">
                                        <property name="paddingLeft">2pt</property>
                                        <structure name="numberFormat">
                                            <property name="category">Fixed</property>
                                            <property name="pattern">###0.00000{RoundingMode=HALF_UP}</property>
                                        </structure>
                                        <property name="resultSetColumn">Center_Lat</property>
                                    </data>
                                </cell>
                                <cell id="1078">
                                    <data id="1079">
                                        <property name="paddingLeft">2pt</property>
                                        <structure name="numberFormat">
                                            <property name="category">Fixed</property>
                                            <property name="pattern">###0.00000{RoundingMode=HALF_UP}</property>
                                        </structure>
                                        <property name="resultSetColumn">Center_Lon</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="1080">
                                <cell id="1081"/>
                                <cell id="1082"/>
                                <cell id="1083"/>
                                <cell id="1088"/>
                                <cell id="1089"/>
                                <cell id="1090"/>
                                <cell id="1091"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>
